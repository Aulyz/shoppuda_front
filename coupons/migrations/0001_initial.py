# Generated by Django 5.2.4 on 2025-08-18 10:20

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("orders", "0001_initial"),
        ("products", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Coupon",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        db_index=True,
                        help_text="쿠폰 코드 (자동 생성 가능)",
                        max_length=50,
                        unique=True,
                        verbose_name="쿠폰 코드",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="쿠폰명")),
                ("description", models.TextField(blank=True, verbose_name="설명")),
                (
                    "discount_type",
                    models.CharField(
                        choices=[
                            ("FIXED", "정액 할인"),
                            ("PERCENTAGE", "정률 할인"),
                            ("FREE_SHIPPING", "무료 배송"),
                        ],
                        default="FIXED",
                        max_length=20,
                        verbose_name="할인 타입",
                    ),
                ),
                (
                    "discount_value",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="정액 할인: 원 단위, 정률 할인: % 단위",
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="할인 값",
                    ),
                ),
                (
                    "max_discount_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="정률 할인 시 최대 할인 금액 제한",
                        max_digits=10,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="최대 할인 금액",
                    ),
                ),
                (
                    "min_order_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="최소 주문 금액",
                    ),
                ),
                (
                    "exclude_sale_items",
                    models.BooleanField(default=False, verbose_name="세일 상품 제외"),
                ),
                (
                    "issue_type",
                    models.CharField(
                        choices=[
                            ("PUBLIC", "공개 쿠폰"),
                            ("PRIVATE", "개인 쿠폰"),
                            ("WELCOME", "회원가입 쿠폰"),
                            ("BIRTHDAY", "생일 쿠폰"),
                            ("COMEBACK", "휴면 복귀 쿠폰"),
                            ("VIP", "VIP 전용 쿠폰"),
                            ("EVENT", "이벤트 쿠폰"),
                        ],
                        default="PUBLIC",
                        max_length=20,
                        verbose_name="발급 타입",
                    ),
                ),
                (
                    "total_quantity",
                    models.IntegerField(
                        blank=True,
                        help_text="비어있으면 무제한",
                        null=True,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="총 발급 수량",
                    ),
                ),
                (
                    "issued_quantity",
                    models.IntegerField(default=0, verbose_name="발급된 수량"),
                ),
                (
                    "usage_limit_total",
                    models.IntegerField(
                        blank=True,
                        help_text="비어있으면 무제한",
                        null=True,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="전체 사용 제한",
                    ),
                ),
                (
                    "usage_limit_per_user",
                    models.IntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="사용자별 사용 제한",
                    ),
                ),
                (
                    "used_count",
                    models.IntegerField(default=0, verbose_name="사용된 횟수"),
                ),
                ("valid_from", models.DateTimeField(verbose_name="유효 시작일")),
                ("valid_to", models.DateTimeField(verbose_name="유효 종료일")),
                (
                    "days_valid_after_issue",
                    models.IntegerField(
                        blank=True,
                        help_text="개인 쿠폰 발급 시 사용",
                        null=True,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="발급 후 유효 일수",
                    ),
                ),
                (
                    "target_membership_levels",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text='["BRONZE", "SILVER", "GOLD", "PLATINUM", "DIAMOND"]',
                        verbose_name="대상 회원 등급",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="활성 상태"),
                ),
                (
                    "is_stackable",
                    models.BooleanField(
                        default=False, verbose_name="다른 쿠폰과 중복 사용"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="생성일"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="수정일"),
                ),
                (
                    "applicable_categories",
                    models.ManyToManyField(
                        blank=True,
                        help_text="비어있으면 모든 카테고리 적용",
                        to="products.category",
                        verbose_name="적용 카테고리",
                    ),
                ),
                (
                    "applicable_products",
                    models.ManyToManyField(
                        blank=True,
                        help_text="비어있으면 모든 상품 적용",
                        to="products.product",
                        verbose_name="적용 상품",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_coupons",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="생성자",
                    ),
                ),
                (
                    "target_users",
                    models.ManyToManyField(
                        blank=True,
                        related_name="targeted_coupons",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="대상 사용자",
                    ),
                ),
            ],
            options={
                "verbose_name": "쿠폰",
                "verbose_name_plural": "쿠폰",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CouponLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("CREATED", "생성"),
                            ("ISSUED", "발급"),
                            ("USED", "사용"),
                            ("EXPIRED", "만료"),
                            ("CANCELLED", "취소"),
                            ("MODIFIED", "수정"),
                        ],
                        max_length=20,
                        verbose_name="액션",
                    ),
                ),
                ("details", models.JSONField(default=dict, verbose_name="상세 정보")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="발생일"),
                ),
                (
                    "coupon",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to="coupons.coupon",
                        verbose_name="쿠폰",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="사용자",
                    ),
                ),
            ],
            options={
                "verbose_name": "쿠폰 로그",
                "verbose_name_plural": "쿠폰 로그",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="UserCoupon",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ISSUED", "발급됨"),
                            ("USED", "사용됨"),
                            ("EXPIRED", "만료됨"),
                            ("CANCELLED", "취소됨"),
                        ],
                        default="ISSUED",
                        max_length=20,
                        verbose_name="상태",
                    ),
                ),
                (
                    "issued_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="발급일"),
                ),
                (
                    "used_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="사용일"),
                ),
                ("expires_at", models.DateTimeField(verbose_name="만료일")),
                (
                    "discount_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="실제 적용된 할인 금액",
                        max_digits=10,
                        verbose_name="할인 금액",
                    ),
                ),
                (
                    "coupon",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_coupons",
                        to="coupons.coupon",
                        verbose_name="쿠폰",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="used_coupons",
                        to="orders.order",
                        verbose_name="사용 주문",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_coupons",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="사용자",
                    ),
                ),
            ],
            options={
                "verbose_name": "사용자 쿠폰",
                "verbose_name_plural": "사용자 쿠폰",
                "ordering": ["-issued_at"],
            },
        ),
        migrations.AddIndex(
            model_name="coupon",
            index=models.Index(fields=["code"], name="coupons_cou_code_3bf721_idx"),
        ),
        migrations.AddIndex(
            model_name="coupon",
            index=models.Index(
                fields=["is_active"], name="coupons_cou_is_acti_a50634_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="coupon",
            index=models.Index(
                fields=["valid_from", "valid_to"], name="coupons_cou_valid_f_cf442c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="usercoupon",
            index=models.Index(
                fields=["user", "status"], name="coupons_use_user_id_aa902e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="usercoupon",
            index=models.Index(
                fields=["expires_at"], name="coupons_use_expires_48ba56_idx"
            ),
        ),
    ]
